extends layout

block title
	- import std.algorithm;
	- import vibe.data.json;
	- import vibe.textfilter.urlencode;
	- import dubregistry.viewutils;
	- import userman.controller;
	- auto title = "Package " ~ packageName ~ " version " ~ versionInfo["version"].get!string;

block css
	link(rel="stylesheet", type="text/css", href="#{req.rootDir}styles/common.css")
	- if (versionInfo.readme.opt!string.length)
		link(rel="stylesheet", type="text/css", href="#{req.rootDir}styles/markdown.css")

block body

	- import vibe.data.bson;
	- if (req.session && user.id == User.ID.fromString(req.session.get!string("userID")))
		a(href="#{req.rootDir}my_packages/#{packageName}") Manage this package

	h2 Description

	p= versionInfo.description.opt!string

	h2 Package Information

	table
		- if (packageName.canFind(":"))
			tr
				td Root package
				td
					a(href="#{req.rootDir}packages/#{urlEncode(packageInfo.name.get!string)}")= packageInfo.name.get!string

		tr
			td Version
			td #{versionInfo["version"].get!string} (#{formatDate(versionInfo.date)})

		- if( auto ph = "homepage" in versionInfo )
			tr
				td Homepage
				td
					a(href="#{ph.get!string}")= ph.get!string

		- if( auto pr = "repository" in packageInfo )
			- string url;
			- if( pr.kind == "github" )
				- url = "https://github.com/"~pr.owner.get!string~"/"~pr.project.get!string;
			- else if( pr.kind == "bitbucket" )
				- url = "https://bitbucket.org/"~pr.owner.get!string~"/"~pr.project.get!string;
			- if( url.length )
				tr
					td Repository
					td
						a(href=url)= url

		- if( auto pl = "license" in versionInfo )
			tr
				td License
				td= pl.get!string

		- if( auto pl = "copyright" in versionInfo )
			tr
				td Copyright
				td= pl.get!string

		- if( auto pa = "authors" in versionInfo )
			tr
				td Authors
				td= join(map!(a => a.get!string)(pa.get!(Json[])), ", ")

		tr
			td Registered by
			td= user.fullName.length ? user.fullName : user.name

		tr
			td Dependencies
				- auto pd = "dependencies" in versionInfo;
				- if (pd && pd.length)
					td
						- foreach (string dep, ver; *pd)
							p
								a(href="#{req.rootDir}packages/#{urlEncode(dep)}")= dep
				- else
					td none

		- if (auto ps = "systemDependencies" in versionInfo)
			tr
				td System dependencies
				td= ps.get!string

	h2 Installation

	p To use this package, put the following dependency into your project's dub.json into the dependencies section:
	- string expr = versionInfo["version"].get!string;
	- if( !expr.startsWith("~") ) expr = "~>" ~ expr;
	pre.code {
		|	...
		|	"dependencies": {
		|		"#{packageName}": "#{expr}"
		|	}
		|}

	- if (versionInfo.readme.opt!string.length)
		h2 Readme

		.repositoryReadme.markdown-body
			- import vibe.textfilter.markdown;
			- scope msettings = new MarkdownSettings;
			- msettings.flags = MarkdownFlags.backtickCodeBlocks|MarkdownFlags.noInlineHtml;
			- msettings.headingBaseLevel = 2;
			!= filterMarkdown(versionInfo.readme.get!string, msettings)

	h2 Available versions

	- foreach_reverse (v; packageInfo.versions)
		- auto vs = v["version"].get!string;
		- if (vs == versionInfo["version"])
			em= vs
		- else
			a(href='#{req.rootDir}packages/#{urlEncode(packageName)}/#{vs}')= vs

